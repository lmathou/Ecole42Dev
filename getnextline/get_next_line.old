/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jblancha <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2016/12/02 18:30:22 by jblancha          #+#    #+#             */
/*   Updated: 2016/12/06 21:37:08 by jblancha         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"
#include "get_next_line.h"

int	get_next_line(const int fd, char **line)
{
	static char		*buf = NULL;
	char			*temp;
	char			*pos;
	char			*lec;
	int				count;

	if ((fd <= 0) || (!line))
		return (-1);
	// if ((read(fd, NULL, BUFF_SIZE) == 0))
	// 	return (0);
	count = 1;
	if (!buf)
		buf = ft_strnew(BUFF_SIZE + 1);
	while (!(pos = ft_strchr(buf, '\n')) && count)
	{
		lec = ft_strnew(BUFF_SIZE + 1);
		if ((count = read(fd, lec, BUFF_SIZE)) < 0)
		{
			ft_memdel((void **)&lec);
			return (-1); 
		}
		lec[count] = '\0';
		temp = ft_strnew(ft_strlen(buf));
		ft_strcpy(temp, buf);
		ft_memdel((void **)&buf);
		buf = ft_strnew(ft_strlen(temp) + count);
		ft_strcat(buf, temp);
		ft_strcat(buf, lec);
		ft_memdel((void **)&temp);
		ft_memdel((void **)&lec);
	}
	if (pos)
	{
		//ft_putstr("buf|\n");
		//ft_putstr(buf);
		//ft_putstr("fin buf |");

		//if ((*buf == '\n')  && (ft_strlen(buf) == 1) && (read(fd, NULL, BUFF_SIZE) == 0))
		//{
		//	ft_putstr("ds if \n");
		//	*line = (char *)ft_memalloc(1);
		//	return (0);
		//}

		temp = ft_strsub(buf, (unsigned int)(pos - buf + 1), buf +
				ft_strlen(buf) - pos + 1);
		*line = ft_strsub(buf, 0, (pos - buf) );
		ft_memdel((void **)&buf);
		buf = temp;
		return (1);
	}
	*line = ft_strdup(buf);
	ft_memdel((void **)&buf);
	return (0);
}


